-- Table to store language-specific details for each word
CREATE TABLE wordDetail (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,   -- Unique identifier for the detail entry
    word_id INTEGER NOT NULL,               -- Foreign key linking to the words table
    language_code TEXT NOT NULL,      -- Language identifier (e.g., 'en', 'ja', 'zh') - VARCHAR(5) maps to TEXT

    -- Language-specific content
    explanation TEXT,                       -- Translation/definition in this language
    sentences TEXT,                         -- Example sentences (stored as TEXT, conversion needed in Kotlin)
    related_words TEXT,                     -- Related words/phrases (stored as TEXT, join by ';')
    pronunciation TEXT,            -- Pronunciation information - VARCHAR(255) maps to TEXT

    -- Review progress for this specific language detail - MOVED TO 'word' TABLE
    -- review_progress INTEGER NOT NULL DEFAULT 0,

    -- Constraints
    FOREIGN KEY (word_id) REFERENCES word(id) ON DELETE CASCADE, -- If a word is deleted, delete its details
    UNIQUE (word_id, language_code)         -- Ensure only one detail entry per word per language
);

-- Optional: Indexes for faster joins and lookups
CREATE INDEX idx_word_detail_word_id ON wordDetail(word_id);
CREATE INDEX idx_word_detail_language_code ON wordDetail(language_code);

-- Basic Queries for 'wordDetail' table

selectDetailsForWord:
SELECT * FROM wordDetail WHERE word_id = ?;

selectDetailForWordAndLanguage:
SELECT * FROM wordDetail WHERE word_id = ? AND language_code = ?;

insertDetail: -- Removed review_progress
INSERT INTO wordDetail(word_id, language_code, explanation, sentences, related_words, pronunciation)
VALUES (?, ?, ?, ?, ?, ?);

updateDetail: -- Removed review_progress
UPDATE wordDetail SET
    explanation = ?,
    sentences = ?,
    related_words = ?,
    pronunciation = ?
WHERE id = ?;

deleteDetailById:
DELETE FROM wordDetail WHERE id = ?;

deleteDetailsForWord:
DELETE FROM wordDetail WHERE word_id = ?;

-- Query to select word items with details for a specific language, mapped for UI display
-- Selects review_progress from the 'word' table (w.review_progress)
selectWordItemsForLanguage:
SELECT
    w.id AS id,
    w.text AS title,
    wd.explanation,
    wd.sentences,
    wd.related_words, -- Select related_words
    wd.pronunciation,
    w.review_progress -- Select review_progress from the word table
FROM wordDetail AS wd
JOIN word AS w ON w.id = wd.word_id
WHERE wd.language_code = ?
ORDER BY w.create_at DESC; -- Order by creation date of the word, newest first
