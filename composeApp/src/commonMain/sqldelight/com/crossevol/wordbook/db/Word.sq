-- Table to store the core word entry and its general metadata
CREATE TABLE word (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, -- Unique identifier for the word
    text TEXT NOT NULL UNIQUE,            -- The word or phrase being learned
    create_at INTEGER NOT NULL, -- When the word was added (assuming epoch milliseconds)
    last_review_at INTEGER, -- When the word (or any of its details) was last reviewed (assuming epoch milliseconds, nullable)
    review_progress INTEGER NOT NULL DEFAULT 0 -- Progress metric (e.g., level in spaced repetition) - MOVED FROM wordDetail
);

-- Optional: Index on text for faster lookup by word
CREATE INDEX idx_word_text ON word(text);
-- Optional: Index on last_review_at for querying words needing review
CREATE INDEX idx_word_last_review ON word(last_review_at);
-- Optional: Index on review_progress for querying words by progress
CREATE INDEX idx_word_review_progress ON word(review_progress);


-- Basic Queries for 'word' table

selectAll:
SELECT * FROM word;

selectById:
SELECT * FROM word WHERE id = ?;

selectByText:
SELECT * FROM word WHERE text = ?;

insertWord: -- Added review_progress
INSERT INTO word(text, create_at, last_review_at, review_progress) VALUES (?, ?, ?, ?);

updateLastReviewTime:
UPDATE word SET last_review_at = ? WHERE id = ?;

updateReviewProgress: -- New query to update review progress
UPDATE word SET review_progress = ? WHERE id = ?;

deleteById:
DELETE FROM word WHERE id = ?;

countWords:
SELECT count(*) FROM word;
